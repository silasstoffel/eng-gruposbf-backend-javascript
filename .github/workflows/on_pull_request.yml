name: On Pull Request

on: [pull_request]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Node.js (v18.15)
      uses: actions/setup-node@v3
      with:
        node-version: 18.15

    - name: Install Dependencies
      run: npm ci

    - name: Building app
      run: npm run build

  tests:
    name: Tests
    runs-on: ubuntu-latest
    #needs: [build]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: sbf
          POSTGRES_DB: sbf
          POSTGRES_PASSWORD: sbf
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 5432:5432

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Node.js (v18.15)
      uses: actions/setup-node@v3
      with:
        node-version: 18.15

    - name: Install Dependencies
      run: npm ci

    - name: Run Test
      run: npm run test:coverage
      env:
        PORT: 3001
        ENVIRONMENT: development
        DB_TYPE: postgres
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: sbf
        DB_PWD: sbf
        DB_NAME: sbf
        DB_LOGGING: true
        IGNORE_INIT_DATA_SOURCE_CI: true

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: |
          ${{ github.workspace }}/coverage

# SBF Groups requires private repository, but private repository doesn't support sonar cloud free mode
#  sonar-cloud:
#    name: Sonar Cloud
#    runs-on: ubuntu-latest
#    needs: [tests]
#    steps:
#    - name: Checkout repository
#      uses: actions/checkout@v3
#      with:
#        fetch-depth: 0
#
#    - name: Download coverage artifact
#      uses: actions/download-artifact@v3
#      with:
#        name: coverage
#        path: coverage
#
#    - name: SonarCloud Scan
#      uses: SonarSource/sonarcloud-github-action@master
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
